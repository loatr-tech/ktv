{"version":3,"sources":["app/utils/firebase.ts","app/_context/room.context.tsx","app/room/room.tsx","app/remote/remote.tsx","app/remote/remote-song.tsx","app/remote/remote-search.tsx","app/remote/remote-playing.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","RoomContext","createContext","RoomContextProvider","props","useState","room","setRoom","roomId","setRoomId","songs","setSongs","useEffect","unsubscribeFirebase","firestore","collection","doc","orderBy","onSnapshot","snapshot","newActiveSongs","docs","map","video","id","data","Provider","value","children","Room","useContext","ytPlayer","setYtPlayer","currentSong","setCurrentSong","songState","setSongState","songList","length","loadVideoById","videoId","delete","then","console","log","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","window","e","Player","events","onReady","target","playVideo","onStateChange","firstNewSong","update","position","className","tabIndex","onClick","Remote","to","_addSongInFirebase","onTop","Promise","resolve","add","RemoteSong","isAdded","setIsAdded","thumbnails","thumbnail","videoTitle","title","runs","text","url","alt","RemoteSearch","query","setQuery","searchResults","setSearchResults","onSearch","useCallback","a","axios","get","params","headers","type","placeholder","onChange","event","RemotePlaying","scope","song","index","statusText","onMoveToTheTop","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0VAeAA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKFR,QAAf,E,eCdaS,EAAcC,wBAAmB,IAE/B,SAASC,EAAoBC,GAAa,IAAD,EAC9BC,qBAD8B,mBAC/CC,EAD+C,KACzCC,EADyC,OAE1BF,qBAF0B,mBAE/CG,EAF+C,KAEvCC,EAFuC,OAG5BJ,mBAAgB,IAHY,mBAG/CK,EAH+C,KAGxCC,EAHwC,KA0BtD,OArBAC,qBAAU,WACR,IAAMC,EAAsBrB,EACzBsB,YACAC,WAAW,SACXC,IAAI,wBACJD,WAAW,SACXE,QAAQ,WAAY,OACpBC,YAAW,SAACC,GACX,IAAMC,EAAiBD,EAASE,KAAKC,KAAI,SAACC,GACxC,OAAO,aACLC,GAAID,EAAMC,IACPD,EAAME,WAIbd,EAASS,MAGb,OAAO,kBAAMP,OACZ,IAGD,cAACZ,EAAYyB,SAAb,CACEC,MAAO,CACLrB,OACAC,UACAC,SACAC,YACAC,SANJ,SASGN,EAAMwB,W,MCwEEC,MA5Ff,WAAiB,IACPnB,EAAUoB,qBAAW7B,GAArBS,MADM,EAEkBL,qBAFlB,mBAEP0B,EAFO,KAEGC,EAFH,OAGwB3B,qBAHxB,mBAGP4B,EAHO,KAGMC,EAHN,OAIoB7B,qBAJpB,mBAIP8B,EAJO,KAIIC,EAJJ,KAwEd,OAzDAxB,qBAAU,WA9BY,IAACyB,EAgCH,IAAdF,GAAmBJ,IACjBrB,EAAM4B,OAAS,EACjBP,EAASQ,cAAc7B,EAAM,GAAG8B,SAEhCT,EAASQ,cAAc,gBApCNF,EAsCH3B,GArCP4B,QACX9C,EACGsB,YACAC,WAAW,SACXC,IAAI,wBACJD,WAAW,SACXC,IAAIqB,EAAS,GAAGb,IAChBiB,SACAC,MAAK,WACJC,QAAQC,IAAI,oBA6BdR,EAAa,MAEd,CAACD,EAAWzB,EAAOqB,IAEtBnB,qBAAU,WAER,IAAMiC,EAAMC,SAASC,cAAc,UACnCF,EAAIrB,GAAK,qBACTqB,EAAIG,IAAM,qCACV,IAAMC,EAAiBH,SAASI,qBAAqB,UAAU,GAE/DD,EAAeE,WAAWC,aAAaP,EAAKI,GAE5CI,OAAM,wBAA8B,SAACC,GACnC,IAAID,OAAM,GAAOE,OAAO,qBAAsB,CAC5Cf,QAAS,cACTgB,OAAQ,CACNC,QAAS,SAACH,GACRA,EAAEI,OAAOC,YACT3B,EAAYsB,EAAEI,SAEhBE,cAAe,YAAoB,IAAjBnC,EAAgB,EAAhBA,KAChBW,EAAaX,UAKpB,IAEHb,qBAAU,WACR,GAAMmB,GAAYrB,EAAM4B,OAAQ,CAC9B,IAAMuB,EAAenD,EAAM,IACZ,OAAXuB,QAAW,IAAXA,OAAA,EAAAA,EAAaO,WAAYqB,EAAarB,UACxCT,EAASQ,cAAcsB,EAAarB,SAChC9B,EAAM4B,OAAS,GACjB9C,EACGsB,YACAC,WAAW,SACXC,IAAI,wBACJD,WAAW,SACXC,IAAI6C,EAAarC,IACjBsC,OAAO,CAAEC,SAAUF,EAAaE,SAAW,MAEhD7B,EAAe2B,OAGlB,CAAC9B,EAAUrB,EAAOuB,IAGnB,sBAAK+B,UAAU,iBAAf,UACE,yBAASA,UAAU,sBAAnB,SACE,qBAAKA,UAAU,wBAAf,SACE,qBACExC,GAAG,qBACHwC,UAAU,cACVC,UAAW,QAKjB,oCACE,wBAAQC,QAAS,WA9ErBnC,EAAS4B,aA8EL,kBACA,wBAAQO,QAAS,WA1ErB9B,EAAa,IA0ET,yB,MClFO+B,MApBf,WAAmB,IACTzD,EAAUoB,qBAAW7B,GAArBS,MACR,OACE,sBAAKsD,UAAU,mBAAf,UACE,0BAASA,UAAU,eAAnB,UACE,eAAC,IAAD,CAAMI,GAAG,kBAAkBJ,UAAU,mCAArC,sCACO,sBAAMA,UAAU,QAAhB,SAAyBtD,EAAM4B,YAEtC,cAAC,IAAD,CAAM8B,GAAG,iBAAiBJ,UAAU,mCAApC,6BAKF,yBAASA,UAAU,iBAAnB,SACE,wBAAQA,UAAU,mCAAlB,gC,wDCdR,SAASK,EAAmB3D,EAAca,GAA4B,IAAhB+C,EAAe,wDACnE,OAAO,IAAIC,SAAQ,SAAAC,GACjB,IAAIT,EAAW,IACXrD,EAAM4B,OAAS,IAEfyB,EADEO,GAAS5D,EAAM4B,OAAS,EACf5B,EAAM,GAAGqD,SAAW,EAEpBrD,EAAMA,EAAM4B,OAAS,GAAGyB,SAAW,KAGlDvE,EACGsB,YACAC,WAAW,SACXC,IAAI,wBACJD,WAAW,SACX0D,IALH,2BAMOlD,GANP,IAOIwC,cAEDrB,MAAK,WACJ8B,GAAQ,SAyDDE,MApDf,SAAoBtE,GAAa,IACvBM,EAAUoB,qBAAW7B,GAArBS,MADsB,EAEAL,oBAAS,GAFT,mBAEvBsE,EAFuB,KAEdC,EAFc,KAGtBrD,EAAUnB,EAAVmB,MACAsD,EAAetD,EAAMuD,UAArBD,WACOE,EALe,YAKCxD,EAAMyD,MAAMC,KALb,MAKrBC,KAcT,OACE,sBAAKlB,UAAU,cAAf,UACE,yBAASA,UAAU,qBAAnB,SAAyCe,IACzC,0BAASf,UAAU,mBAAnB,UACE,qBACEA,UAAU,oBACVhB,IAAK6B,EAAWA,EAAWvC,OAAS,GAAG6C,IACvCC,IAAKL,IAEP,qBAAKf,UAAU,sBAAf,SAEIW,EAAU,sDACV,qCACE,wBACEX,UAAU,oBACVE,QAAS,WA1BrBG,EAAmB3D,EAAOa,GAAOmB,MAAK,WACpCkC,GAAW,OAuBH,0BAMA,wBACEZ,UAAU,oBACVE,QAAS,WA1BrBG,EAAmB3D,EAAOa,GAAO,GAAMmB,MAAK,WAC1CkC,GAAW,OAuBH,sCCNCS,MAvDf,WAAyB,IACf3E,EAAUoB,qBAAW7B,GAArBS,MADc,EAEIL,mBAAiB,IAFrB,mBAEfiF,EAFe,KAERC,EAFQ,OAGoBlF,mBAAgB,IAHpC,mBAGfmF,EAHe,KAGAC,EAHA,KAIhBC,EAAWC,sBAAW,sBAAC,8BAAAC,EAAA,0DACvBN,EADuB,gCAEFO,IAAMC,IAAN,mCAA8C,CACnEC,OAAQ,CAAET,SACVU,QAAS,CACP,8BAA+B,wBAC/B,+BAAgC,uCANX,gBAEjBvE,EAFiB,EAEjBA,KAORgE,EAAiBhE,GATQ,2CAW1B,CAAC6D,IAEJ,OACE,qCACE,yBAAQtB,UAAU,uBAAlB,UACE,cAAC,IAAD,CAAMI,GAAG,UAAUJ,UAAU,gBAA7B,0BAGA,eAAC,IAAD,CAAMI,GAAG,kBAAkBJ,UAAU,kBAArC,sCACO,sBAAMA,UAAU,QAAhB,SAAyBtD,EAAM4B,eAGxC,sBAAK0B,UAAU,YAAf,UACE,sBAAKA,UAAU,gCAAf,UACE,uBACEiC,KAAK,OACLjC,UAAU,eACVkC,YAAY,cACZvE,MAAO2D,EACPa,SAAU,SAACC,GAAD,OAAgBb,EAASa,EAAM1C,OAAO/B,UAElD,wBACEqC,UAAU,0BACViC,KAAK,SACL/B,QAASwB,EAHX,uBASF,kCACGF,EAAclE,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAAYA,MAAOA,GAAYA,EAAMiB,qB,MCelC6D,MA/Df,WAA0B,IAChB3F,EAAUoB,qBAAW7B,GAArBS,MAYR,OACE,qCACE,yBAAQsD,UAAU,wBAAlB,UACE,cAAC,IAAD,CAAMI,GAAG,UAAUJ,UAAU,gBAA7B,0BAGA,+DAEF,wBAAOA,UAAU,6BAAjB,UACE,gCACE,+BACE,oBAAIsC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,sCACA,oBAAIA,MAAM,aAGd,gCACG5F,EAAMY,KAAI,SAACiF,EAAWC,GAAmB,IACzBzB,EADwB,YACRwB,EAAKvB,MAAMC,KADH,MAC9BC,KACLuB,EAAa,KAMjB,OALc,IAAVD,EACFC,EAAa,2BACM,IAAVD,IACTC,EAAa,4BAGb,qBAAIzC,UAAqB,IAAVwC,EAAc,gBAAkB,GAA/C,UACE,6BAAKA,EAAQ,IACb,6BAAKzB,IACL,6BACG0B,EACC,+BAAOA,IAEP,wBACEzC,UAAU,4BACVE,QAAS,kBA7CN,SAACqC,GACtB/G,EACGsB,YACAC,WAAW,SACXC,IAAI,wBACJD,WAAW,SACXC,IAAIuF,EAAK/E,IACTsC,OAAO,CAAEC,SAAUrD,EAAM,GAAGqD,SAAW,IAsCT2C,CAAeH,IAFhC,8BAPkDC,eClBvDG,MAlBf,WACE,OACE,cAACxG,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyG,OAAK,EAACC,KAAK,IAAlB,6BAGA,cAAC,IAAD,CAAOA,KAAK,QAAQC,UAAWjF,IAC/B,cAAC,IAAD,CAAOgF,KAAK,UAAUD,OAAK,EAACE,UAAW3C,IACvC,cAAC,IAAD,CAAO0C,KAAK,iBAAiBC,UAAWzB,IACxC,cAAC,IAAD,CAAOwB,KAAK,kBAAkBC,UAAWT,YCNpCU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBvE,MAAK,YAAkD,IAA/CwE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3E,SAAS4E,eAAe,SAM1BX,M","file":"static/js/main.bb2ccef3.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAZ3DKq0vI256yimaad4iUp0uML33m07Yo\",\n  authDomain: \"loatr-tech-ktv.firebaseapp.com\",\n  projectId: \"loatr-tech-ktv\",\n  storageBucket: \"loatr-tech-ktv.appspot.com\",\n  messagingSenderId: \"580571065570\",\n  appId: \"1:580571065570:web:a0f122923e4800aa2742bb\",\n  measurementId: \"G-XQY5SYQYEV\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { createContext, useEffect, useState } from 'react';\nimport firebase from '../utils/firebase';\n\nexport const RoomContext = createContext<any>({});\n\nexport default function RoomContextProvider(props: any) {\n  const [room, setRoom] = useState();\n  const [roomId, setRoomId] = useState();\n  const [songs, setSongs] = useState<any[]>([]);\n\n  useEffect(() => {\n    const unsubscribeFirebase = firebase\n      .firestore()\n      .collection('rooms')\n      .doc('kcuRCauZPqfaoLCLcjDP')\n      .collection('songs')\n      .orderBy('position', 'asc')\n      .onSnapshot((snapshot) => {\n        const newActiveSongs = snapshot.docs.map((video: any) => {\n          return {\n            id: video.id,\n            ...video.data(),\n          };\n        });\n\n        setSongs(newActiveSongs);\n      });\n\n    return () => unsubscribeFirebase();\n  }, []);\n\n  return (\n    <RoomContext.Provider\n      value={{\n        room,\n        setRoom,\n        roomId,\n        setRoomId,\n        songs,\n      }}\n    >\n      {props.children}\n    </RoomContext.Provider>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport firebase from '../utils/firebase';\nimport { RoomContext } from '../_context/room.context';\nimport './room.scss';\ndeclare var window: any;\n\nconst removeFirstSong = (songList: any[]) => {\n  if (songList.length) {\n    firebase\n      .firestore()\n      .collection('rooms')\n      .doc('kcuRCauZPqfaoLCLcjDP')\n      .collection('songs')\n      .doc(songList[0].id)\n      .delete()\n      .then(() => {\n        console.log('song removed!');\n      });\n  }\n}\n\nfunction Room() {\n  const { songs } = useContext(RoomContext);\n  const [ytPlayer, setYtPlayer] = useState<any>();\n  const [currentSong, setCurrentSong] = useState<any>();\n  const [songState, setSongState] = useState<number>();\n\n  const playVideo = () => {\n    ytPlayer.playVideo();\n  }\n\n  const nextSong = () => {\n    // set song to end\n    setSongState(0);\n  }\n\n  useEffect(() => {\n    // Go to next song if current song/video ended\n    if (songState === 0 && ytPlayer) {\n      if (songs.length > 1) {\n        ytPlayer.loadVideoById(songs[1].videoId);\n      } else {\n        ytPlayer.loadVideoById('BHACKCNDMW8');\n      }\n      removeFirstSong(songs);\n      setSongState(1);\n    }\n  }, [songState, songs, ytPlayer]);\n\n  useEffect(() => {\n    // Load Youtube iframe API\n    const tag = document.createElement('script');\n    tag.id = 'youtube-iframe-api';\n    tag.src = 'https://www.youtube.com/iframe_api';\n    const firstScriptTag = document.getElementsByTagName('script')[0];\n    // @ts-ignore: Object is possibly 'null'.\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n    window['onYouTubeIframeAPIReady'] = (e: any) => {\n      new window['YT'].Player('ktv-youtube-iframe', {\n        videoId: 'BHACKCNDMW8',\n        events: {\n          onReady: (e: any) => {\n            e.target.playVideo();\n            setYtPlayer(e.target);\n          },\n          onStateChange: ({ data }: any) => {\n            setSongState(data);\n          },\n        },\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!!ytPlayer && songs.length) {\n      const firstNewSong = songs[0];\n      if (currentSong?.videoId !== firstNewSong.videoId) {\n        ytPlayer.loadVideoById(firstNewSong.videoId);\n        if (songs.length > 1) {\n          firebase\n            .firestore()\n            .collection('rooms')\n            .doc('kcuRCauZPqfaoLCLcjDP')\n            .collection('songs')\n            .doc(firstNewSong.id)\n            .update({ position: firstNewSong.position - 1000 });\n        }\n        setCurrentSong(firstNewSong);\n      }\n    }\n  }, [ytPlayer, songs, currentSong]);\n\n  return (\n    <div className=\"room-container\">\n      <section className=\"room-iframe-wrapper\">\n        <div className=\"room-iframe-container\">\n          <div\n            id=\"ktv-youtube-iframe\"\n            className=\"room-iframe\"\n            tabIndex={-1}\n          ></div>\n        </div>\n      </section>\n\n      <section>\n        <button onClick={() => playVideo()}>Play</button>\n        <button onClick={() => nextSong()}>Skip</button>\n      </section>\n    </div>\n  );\n}\n\nexport default Room;\n","import React, { useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { RoomContext } from '../_context/room.context';\nimport './remote.scss';\n\nfunction Remote() {\n  const { songs } = useContext(RoomContext);\n  return (\n    <div className=\"remote-container\">\n      <section className=\"remote-links\">\n        <Link to=\"/remote/playing\" className=\"btn btn-lg btn-outline-secondary\">\n          正在播放 <span className=\"badge\">{songs.length}</span>\n        </Link>\n        <Link to=\"/remote/search\" className=\"btn btn-lg btn-outline-secondary\">\n          点歌\n        </Link>\n      </section>\n\n      <section className=\"remote-actions\">\n        <button className=\"btn btn-lg btn-outline-secondary\">切歌</button>\n      </section>\n    </div>\n  );\n}\n\nexport default Remote;\n","import React, { useContext, useState } from 'react';\nimport firebase from '../utils/firebase';\nimport { RoomContext } from '../_context/room.context';\nimport './remote-song.scss';\n\nfunction _addSongInFirebase(songs: any[], video: any, onTop = false) {\n  return new Promise(resolve => {\n    let position = 1000;\n    if (songs.length > 0) {\n      if (onTop && songs.length > 1) {\n        position = songs[1].position - 1\n      } else {\n        position = songs[songs.length - 1].position + 1000\n      }\n    }\n    firebase\n      .firestore()\n      .collection('rooms')\n      .doc('kcuRCauZPqfaoLCLcjDP')\n      .collection('songs')\n      .add({\n        ...video,\n        position,\n      })\n      .then(() => {\n        resolve(true);\n      });\n  })\n}\n\nfunction RemoteSong(props: any) {\n  const { songs } = useContext(RoomContext);\n  const [isAdded, setIsAdded] = useState(false);\n  const { video } = props;\n  const { thumbnails } = video.thumbnail;\n  const [{ text: videoTitle }] = video.title.runs;\n\n  function onAddSong() {\n    _addSongInFirebase(songs, video).then(() => {\n      setIsAdded(true);\n    })\n  }\n\n  function onAddSongOnTop() {\n    _addSongInFirebase(songs, video, true).then(() => {\n      setIsAdded(true);\n    });\n  }\n\n  return (\n    <div className=\"remote-song\">\n      <section className=\"remote-song-header\">{videoTitle}</section>\n      <section className=\"remote-song-body\">\n        <img\n          className=\"remote-song-image\"\n          src={thumbnails[thumbnails.length - 1].url}\n          alt={videoTitle}\n        />\n        <div className=\"remote-song-actions\">\n          {\n            isAdded ? <span>已添加</span> :\n            <>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => onAddSong()}\n              >\n                添加\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => onAddSongOnTop()}\n              >\n                置顶\n              </button>\n            </>\n          }\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default RemoteSong;\n","import React, { useCallback, useContext, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './remote-search.scss';\nimport axios from 'axios';\nimport RemoteSong from './remote-song';\nimport { RoomContext } from '../_context/room.context';\n\nfunction RemoteSearch() {\n  const { songs } = useContext(RoomContext);\n  const [query, setQuery] = useState<string>('');\n  const [searchResults, setSearchResults] = useState<any[]>([]);\n  const onSearch = useCallback(async () => {\n    if (query) {\n      const { data } = await axios.get(`http://api.loatr.tech/ktv/search`, {\n        params: { query },\n        headers: {\n          'Access-Control-Allow-Origin': 'http://api.loatr.tech',\n          'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n        },\n      });\n      setSearchResults(data);\n    }\n  }, [query]);\n\n  return (\n    <>\n      <header className=\"remote-search-header\">\n        <Link to=\"/remote\" className=\"btn btn-light\">\n          返回\n        </Link>\n        <Link to=\"/remote/playing\" className=\"btn btn-primary\">\n          正在播放 <span className=\"badge\">{songs.length}</span>\n        </Link>\n      </header>\n      <div className=\"container\">\n        <div className=\"input-group remote-search-box\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search song\"\n            value={query}\n            onChange={(event: any) => setQuery(event.target.value)}\n          />\n          <button\n            className=\"btn btn-outline-success\"\n            type=\"button\"\n            onClick={onSearch}\n          >\n            Search\n          </button>\n        </div>\n\n        <section>\n          {searchResults.map((video) => (\n            <RemoteSong video={video} key={video.videoId} />\n          ))}\n        </section>\n      </div>\n    </>\n  );\n}\n\nexport default RemoteSearch;\n","import React, { useContext } from 'react';\nimport firebase from '../utils/firebase';\nimport { Link } from 'react-router-dom';\nimport { RoomContext } from '../_context/room.context';\nimport './remote-playing.scss';\n\nfunction RemotePlaying() {\n  const { songs } = useContext(RoomContext);\n\n  const onMoveToTheTop = (song: any) => {\n    firebase\n      .firestore()\n      .collection('rooms')\n      .doc('kcuRCauZPqfaoLCLcjDP')\n      .collection('songs')\n      .doc(song.id)\n      .update({ position: songs[1].position - 1 });\n  }\n\n  return (\n    <>\n      <header className=\"remote-playing-header\">\n        <Link to=\"/remote\" className=\"btn btn-light\">\n          返回\n        </Link>\n        <span>播放列表</span>\n      </header>\n      <table className=\"table remote-playing-table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">已选歌曲</th>\n            <th scope=\"col\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          {songs.map((song: any, index: number) => {\n            const [{ text: videoTitle }] = song.title.runs;\n            let statusText = null;\n            if (index === 0) {\n              statusText = '正在播放';\n            } else if (index === 1) {\n              statusText = '即将播放';\n            }\n            return (\n              <tr className={index === 0 ? 'table-primary' : ''} key={index}>\n                <td>{index + 1}</td>\n                <td>{videoTitle}</td>\n                <td>\n                  {statusText ? (\n                    <span>{statusText}</span>\n                  ) : (\n                    <button\n                      className=\"btn btn-outline-secondary\"\n                      onClick={() => onMoveToTheTop(song)}\n                    >\n                      置顶\n                    </button>\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nexport default RemotePlaying;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport './App.scss';\nimport Room from './room/room';\nimport Remote from './remote/remote';\nimport RemoteSearch from './remote/remote-search';\nimport RoomContextProvider from './_context/room.context';\nimport RemotePlaying from './remote/remote-playing';\n\nfunction App() {\n  return (\n    <RoomContextProvider>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            Homepage of ktv\n          </Route>\n          <Route path=\"/room\" component={Room} />\n          <Route path=\"/remote\" exact component={Remote} />\n          <Route path=\"/remote/search\" component={RemoteSearch} />\n          <Route path=\"/remote/playing\" component={RemotePlaying} />\n        </Switch>\n      </HashRouter>\n    </RoomContextProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}